/* definitions generated by preprocessor, copy into defines.h */
#ifndef	_DEFINES_
#define	_DEFINES_

#include <stdbool.h>
#include <math.h>
#include <avr/sfr_defs.h>

#define	_ATMEGA16	// device select: _ATMEGAxxxx
#ifdef	__ICCAVR__
#include	"iom16.h"
#endif
#if	__GNUC__
#include	<avr/io.h>
#endif

#include "timer_defs.h"

#define EEPROM_SIZE 512

#define WDTCSR	    WDTCR
#define WDCE        WDTOE

#define WATCHDOG_OFF    (0)
#define WATCHDOG_16MS   (_BV(WDE))
#define WATCHDOG_32MS   (_BV(WDP0) | _BV(WDE))
#define WATCHDOG_64MS   (_BV(WDP1) | _BV(WDE))
#define WATCHDOG_125MS  (_BV(WDP1) | _BV(WDP0) | _BV(WDE))
#define WATCHDOG_250MS  (_BV(WDP2) | _BV(WDE))
#define WATCHDOG_500MS  (_BV(WDP2) | _BV(WDP0) | _BV(WDE))
#define WATCHDOG_1S     (_BV(WDP2) | _BV(WDP1) | _BV(WDE))
#define WATCHDOG_2S     (_BV(WDP2) | _BV(WDP1) | _BV(WDP0) | _BV(WDE))

// Watchdog functions. These are only safe with interrupts turned off.
static inline void watchdogReset(void)
{
  __asm__ __volatile__ (
    "wdr\n"
  );
}

static inline void watchdogConfig(uint8_t x)
{
  WDTCSR = _BV(WDCE) | _BV(WDE);
  WDTCSR = x;
}

#define TIMER_CONTROL_REG			TCCR1B
#define TIMER_WAVEFORM_MODE_BIT_2		WGM12	
#define TIMER_WAVEFORM_MODE_BIT_1		WGM11	
#define TIMER_WAVEFORM_MODE_BIT_0		WGM10	

#define TIMER_REG				TCNT1	
#define TIMER_OUTPUT_COMPARE_REG		OCR1A	

#define TIMER_INTR_MASK_REG		TIMSK	
#define TIMER_ENABLE_COMPARE_MATCH_INTR	OCIE1A	

#define MCU_CONTROL_STATUS_REG		MCUCSR

#define GENERAL_INTERRUPT_CONTROL_REG	GICR
#define ENABLE_INT0_INTR		INT0
#define ENABLE_INT1_INTR		INT1
#define ENABLE_INT2_INTR		INT2

/* definitions for UART control */
#define	BAUD_RATE_LOW_REG	UBRRL
#define	BAUD_RATE_HIGH_REG	UBRRH
#define	UART_CONTROL_REG_A	UCSRA
#define ENABLE_DOUBLE_SPEED	U2X
#define	FRAME_ERROR_BIT		FE
#define	DATA_OVERRUN_BIT	DOR
#define	PARITY_ERROR_BIT	PE
#define	UART_CONTROL_REG_B	UCSRB
#define	ENABLE_TRANSMITTER_BIT	TXEN
#define	ENABLE_RECEIVER_BIT	RXEN
#define	ENABLE_RECEIVE_INTR	RXCIE
#define	ENABLE_SEND_INTR	UDRIE
#define	UART_CONTROL_REG_C	UCSRC
#define	REGISTER_SELECT		URSEL
#define	ENABLE_EVEN_PARITY	UPM1
#define	ENABLE_CHARACTER_SIZE_1	UCSZ1
#define	ENABLE_CHARACTER_SIZE_0	UCSZ0
#define	UART_STATUS_REG	UCSRA
#define	TRANSMIT_COMPLETE_BIT	TXC
#define	RECEIVE_COMPLETE_BIT	RXC
#define	UART_DATA_REG	UDR
#define UART_RX_INTR_FUNC	USART_RXC_vect
#define UART_DRE_INTR_FUNC	USART_UDRE_vect

#define SCL_DDR		DDRC
#define SCL_PORT		PORTC
#define SCL_NO		0

#define SDA_DDR		DDRC
#define SDA_PORT		PORTC
#define SDA_NO		1

#define TWI_BIT_STATUS_REG	TWBR
#define TWI_STATUS_BIT_7	TWS7
#define TWI_STATUS_BIT_6	TWS6
#define TWI_STATUS_BIT_5	TWS5
#define TWI_STATUS_BIT_4	TWS4
#define TWI_STATUS_BIT_3	TWS3
#define TWI_PRESCALER_BIT_1	TWPS1
#define TWI_PRESCALER_BIT_0	TWPS0

#define TWI_BIT_RATE_REG	TWBR

#define TWI_CONTROL_REG		TWCR
#define TWI_INTERRUPT_FLAG	TWINT
#define TWI_ENABLE_ACK_BIT	TWEA
#define TWI_START_CONDITION_BIT	TWSTA
#define TWI_STOP_CONDITION_BIT	TWSTO
#define TWI_WRITE_COLLISION_FLAG TWWC
#define TWI_ENABLE_BIT		TWEN
#define TWI_INTERRUPT_ENABLE	TWIE

#define TWI_INTR_FUNC	TWI_vect

#define TWI_SLAVE_ADDR_REG	TWAR

#define TWI_DATA_REG		TWDR

#define ADC_CTRL_STATUS_REG	ADCSRA
#define ENABLE_ADC		ADEN
#define	ADC_START_CONVERSION	ADSC
#define	ENABLE_ADC_AUTO_TRIGGER	ADATE
#define	ADC_INTERRUPT_FLAG	ADIF
#define	ADC_INTERRUPT_ENABLE	ADIE
#define	ADC_PRESCALE_BIT_2	ADPS2
#define	ADC_PRESCALE_BIT_1	ADPS1
#define	ADC_PRESCALE_BIT_0	ADPS0

#define	ADC_DATA_WORD_REG	ADCW
#define	ADC_DATA_HIGH_REG	ADCH
#define	ADC_DATA_LOW_REG	ADCL

#define SPECIAL_FUNCTION_IO_REG	FIOR
#define	ADC_TRIGGER_SELECT_BIT_2	ADTS2
#define	ADC_TRIGGER_SELECT_BIT_1	ADTS1
#define	ADC_TRIGGER_SELECT_BIT_0	ADTS0

#define ADC_MUX_SELECT_REG	ADMUX
#define ADC_REFERENCE_SELECT_BIT_1	REFS1
#define ADC_REFERENCE_SELECT_BIT_0	REFS0
#define ADC_LEFT_ADJUST_RESULT	ADLAR
#define ADC_MUX_SELECT_BIT4	MUX4
#define ADC_MUX_SELECT_BIT3	MUX3
#define ADC_MUX_SELECT_BIT2	MUX2
#define ADC_MUX_SELECT_BIT1	MUX1
#define ADC_MUX_SELECT_BIT0	MUX0

#define ADC_NCHANNELS	(8U)

#define ADC_INTR_FUNC	ADC_vect

#define UART_BUFFER_SIZE	32U
#define UART_TIMEOUT_N_BYTE_DURATIONS (2)

#define N_MAX_FANS		4U
#define FAN_PWM_COUNTER_OFFSET (256/N_MAX_FANS)

#define FAN_ADC_DDR	DDRA
#define FAN_ADC_PORT	PORTA
#define FAN_ADC_FIRST_NO	0U

#define FAN_DC_DDR	DDRB
#define FAN_DC_PORT	PORTB
#define FAN_DC_FIRST_NO	4U

#define FAN_PWM_DDR	DDRB
#define FAN_PWM_PORT	PORTB
#define FAN_PWM_PIN	PINB
#define FAN_PWM_FIRST_NO	0U

#define FAN_TACH_DDR	DDRD
#define FAN_TACH_PORT	PORTD
#define FAN_TACH_PIN	PIND
#define FAN_TACH_FIRST_NO	2U

#define FAN_RPM_DDR	DDRC
#define FAN_RPM_PORT	PORTC
#define FAN_RPM_FIRST_NO	4U

#define FAN_TIMER_CONTROL_REG			TCCR2
#define FAN_TIMER_WAVEFORM_MODE_BIT_1		WGM21	
#define FAN_TIMER_WAVEFORM_MODE_BIT_0		WGM20	

#define FAN_TIMER_REG				TCNT2	
#define FAN_OUTPUT_COMPARE_REG			OCR2	

#define FAN_TIMER_INTR_MASK_REG			TIMSK	
#define FAN_TIMER_ENABLE_COMPARE_MATCH_INTR	OCIE2	

#define N_MAX_ANALOG		4U

#define ANALOG_ADC_DDR	DDRA
#define ANALOG_ADC_PORT	PORTA
#define ANALOG_ADC_FIRST_NO	N_MAX_FANS

#define BUZZ_DDR        DDRD
#define BUZZ_PORT       PORTD
#define BUZZ_PIN        PIND
#define BUZZ_NO         PD6

#define OVERTEMP_DDR	DDRC
#define OVERTEMP_PORT	PORTC
#define OVERTEMP_PIN	PINC
#define OVERTEMP_NO	PC2

#define MCU_LED_DDR        DDRD
#define MCU_LED_PORT       PORTD
#define MCU_LED_NO         PD7

#define htole16(value) (value)
#define htobe16(value) (value<<8|(value&0xFF))
#define le16toh(value) (value)
#define be16toh(value) ((value<<8)|(value>>8))

#define sbi(r, b) (_SFR_BYTE(r) |= _BV(b))
#define cbi(r, b) (_SFR_BYTE(r) &= ~_BV(b))

#define set_pin_as_output(PIN) (sbi(PIN ## _DDR, PIN ## _NO))
#define set_pin_as_input(PIN) (cbi(PIN ## _DDR, PIN ## _NO))
#define set_pin(PIN, VALUE) (PIN ## _PORT = (PIN ## _PORT & ~_BV(PIN ## _NO)) | ((VALUE!=0)<<PIN ## _NO))
#define set_pin_pullup(PIN, VALUE) set_pin(PIN, VALUE)
#define toggle_pin(PIN) (PIN ## _PORT ^= _BV(PIN ## _NO))
#define read_pin(PIN) (bit_is_set(PIN ## _PIN, PIN ## _NO)!=0)

#endif
